server:
  port: ${NODE_PORT}
  address: ${NODE_HOST}
# 数据源配置
spring:
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    druid:
      # 主库数据源
      master:
        url: jdbc:mysql://10.66.226.74:3306/rongxin_druid?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
        username: sample_dbowner
        password: TDkNWKSFatELG5pN
      # 从库数据源
      slave:
        # 从数据源开关/默认关闭
        enabled: false
        url:
        username:
        password:
      # 初始连接数
      initialSize: 5
      # 最小连接池数量
      minIdle: 10
      # 最大连接池数量
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      # 配置一个连接在池中最大生存的时间，单位是毫秒
      maxEvictableIdleTimeMillis: 900000
      # 配置检测连接是否有效
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      webStatFilter:
        enabled: true
      statViewServlet:
        enabled: true
        # 设置白名单，不填则允许所有访问
        allow:
        url-pattern: /druid/*
        # 控制台管理用户名和密码
        login-username: rx
        login-password: 123456
      filter:
        stat:
          enabled: true
          # 慢SQL记录
          log-slow-sql: true
          slow-sql-millis: 1000
          merge-sql: true
        wall:
          config:
            multi-statement-allow: true
  data:
    mongodb:
      uri: mongodb://10.60.0.30:27017/rongxing_admin?w=majority&wtimeoutMS=5000
      auto-index-creation: true
#            username: admin
#            password: admin
  # redis 配置
  redis:
    # 地址
    host: ${REDIS_HOST}
    # 端口，默认为6379
    port: ${REDIS_PORT}
    # 数据库索引
    database: 1
    # 密码
    password:
    # 连接超时时间
    timeout: 10s
    lettuce:
      pool:
        # 连接池中的最小空闲连接
        min-idle: 0
        # 连接池中的最大空闲连接
        max-idle: 8
        # 连接池的最大数据库连接数
        max-active: 8
        # #连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1ms


# 访问身份验证中用到用户标识
oss:
  accessKeyId: UjyKDL1Jo24Z6TCm
  # 用户用于加密签名字符串和oss用来验证签名字符串的密钥
  accessKeySecret: wfVuLx7LsqIEwMqZ4WGd6ZPjUCyEEF
  # oss的存储空间
  bucketName: jnwq-land-pub-test
  # 上传文件夹路径前缀
  FOLDER: jlncwqw/pkgs/dev/
  # oss对外服务的访问域名
  endpoint: https://oss-cn-beijing.aliyuncs.com

#上传到e签宝文件的模板编号
eqianbao:
  templateId: 1c1009bed17c48ce94421e5112041673
  #回调地址
  sign:
    call:
      back:
        url:
          suffix: https://dev-dashboard-api-credit.cacfintech.com/api/v1.0/credit/contract/callBackSignContract
  #测试环境接入地址：
  api:
    url:
      prefix: https://smlo.tsign.cn/opentreaty-service
    app:
      #应用标识
      id: 7438921315
      #秘钥
      secret: 0265e6667d3c810454da29a062c8bbe7
    contract:
      create:
        url:
          #合同模板创建合同
          suffix: /doc/createbytemplate
      template:
        create:
          url:
            #创建模板
            suffix: /template/createbyfilekey
      download:
        url:
          #签署文件下载
          suffix: /sign/download
      contract:
        url:
          #归档流程
          suffix: /sign/contract/archiveProcess
    file:
      upload:
        url:
          #文件上传路径 获取文件直传地址
          suffix: /file/uploadurl
    sign:
      contract:
        process:
          create:
            url:
              #创建合同签署流程
              suffix: /sign/contract/addProcess
    user:
      auto:
        sign:
          contract:
            url:
              #发起用户自动签署
              suffix: /sign/contract/userSignTask

#微信支付
vx:
  pay:
    app:
      id: wx76e682e76daa70d5
    mch:
      id: 1526904001
    sign:
      key: ZNRX82f10f51d5481c67b57aN83Hh9ke
    call:
      back:
        url:
          suffix: https://dev-jlrx-backend-basic-api.cacfintech.com/api/v1.0/admin/apply/test/weChatCallBack
wechat:
  public:
    app:
      id: wx47bd0da118464bb7


