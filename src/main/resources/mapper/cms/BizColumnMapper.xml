<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rongxin.cms.mapper.BizColumnMapper">
    
    <resultMap type="BizColumn" id="BizColumnResult">
        <result property="id"    column="id"    />
        <result property="parentId"    column="parent_id"    />
        <result property="name"    column="name"    />
        <result property="createDate"    column="create_date"    />
        <result property="createName"    column="create_name"    />
        <result property="createId"    column="create_id"    />
        <result property="colDelete"    column="col_delete"    />
    </resultMap>

    <sql id="selectBizColumnVo">
        select id, parent_id, name, create_date, create_name, create_id, col_delete from biz_column
    </sql>

    <select id="selectBizColumnList" parameterType="BizColumn" resultMap="BizColumnResult">
        <include refid="selectBizColumnVo"/>
        <where>
            1 = 1
            and col_delete = '0'
            <if test="parentId != null "> and parent_id = #{parentId}</if>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="createDate != null "> and create_date = #{createDate}</if>
            <if test="createName != null  and createName != ''"> and create_name like concat('%', #{createName}, '%')</if>
            <if test="createId != null "> and create_id = #{createId}</if>
        </where>
    </select>
    
    <select id="selectBizColumnById" parameterType="Long" resultMap="BizColumnResult">
        <include refid="selectBizColumnVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertBizColumn" parameterType="BizColumn" useGeneratedKeys="true" keyProperty="id">
        insert into biz_column
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="parentId != null">parent_id,</if>
            <if test="name != null">name,</if>
            <if test="createDate != null">create_date,</if>
            <if test="createName != null">create_name,</if>
            <if test="createId != null">create_id,</if>
            <if test="colDelete != null">col_delete,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="parentId != null">#{parentId},</if>
            <if test="name != null">#{name},</if>
            <if test="createDate != null">#{createDate},</if>
            <if test="createName != null">#{createName},</if>
            <if test="createId != null">#{createId},</if>
            <if test="colDelete != null">#{colDelete},</if>
         </trim>
    </insert>

    <update id="updateBizColumn" parameterType="BizColumn">
        update biz_column
        <trim prefix="SET" suffixOverrides=",">
            <if test="parentId != null">parent_id = #{parentId},</if>
            <if test="name != null">name = #{name},</if>
            <if test="createDate != null">create_date = #{createDate},</if>
            <if test="createName != null">create_name = #{createName},</if>
            <if test="createId != null">create_id = #{createId},</if>
            <if test="colDelete != null">col_delete = #{colDelete},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteBizColumnById" parameterType="Long">
        update biz_column set col_delete = '1' where id = #{id}
    </delete>

    <delete id="deleteBizColumnByIds" parameterType="String">
        update biz_column set col_delete = '1' where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>




    <select id="selectColList" parameterType="BizColumn" resultMap="BizColumnResult">
        <include refid="selectBizColumnVo"/>
        where  col_delete = '0'
        <if test="name != null and name != ''">
            AND name like concat('%', #{name}, '%')
        </if>
        order by parent_id, id
    </select>
</mapper>